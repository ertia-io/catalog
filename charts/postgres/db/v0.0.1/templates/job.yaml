apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-user
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      containers:
        - name: pg-client # Container name in kubernetes, doesn't really matter
          image: postgres:15  # Docker image to use, in the case latest postgres from docker hub, should probably have a fixed version. :latest, :14
          
          env:
            - name: PGDATABASE # This env variable is used per default, by PSQL
              value: {{ .Values.postgres.database }}
            - name: PGHOST # This env variable is used per default, by PSQL
              value: {{ .Values.postgres.host }}
            - name: PGPORT
              value: "{{ .Values.postgres.port }}"
            - name: PGUSER
              value: {{ .Values.postgres.username }}
            - name: PGPASSWORD
              value: {{ .Values.postgres.password }}
            - name: APPLICATIONUSER
              valueFrom: 
                secretKeyRef:
                  name: "{{ .Release.Name }}"
                  key: username
            - name: APPLICATIONPASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}"
                  key: password
          command: ["psql","-c", "CREATE ROLE $(APPLICATIONUSER) WITH LOGIN PASSWORD '$(APPLICATIONPASSWORD)'"]
      restartPolicy: Never
  backoffLimit: 10
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-db
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      containers:
        - name: pg-client
          image: postgres
          env:
            - name: PGDATABASE # This env variable is used per default, by PSQL
              value: {{ .Values.postgres.database }}
            - name: PGHOST # This env variable is used per default, by PSQL
              value: {{ .Values.postgres.host }}
            - name: PGPORT
              value: "{{ .Values.postgres.port }}"
            - name: PGUSER
              value: {{ .Values.postgres.username }}
            - name: PGPASSWORD
              value: {{ .Values.postgres.password }}
            - name: APPLICATIONUSER
              valueFrom:
                secretKeyRef: 
                  name: "{{ .Release.Name }}"
                  key: username
            - name: APPLICATIONDB
              valueFrom:
                secretKeyRef: 
                  name: "{{ .Release.Name }}"
                  key: database
          command: ["psql","-c", "CREATE DATABASE $(APPLICATIONDB) WITH OWNER $(APPLICATIONUSER)"]
      restartPolicy: Never
  backoffLimit: 10
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-grant
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      containers:
        - name: pg-client
          image: postgres
          env:
            - name: PGDATABASE # This env variable is used per default, by PSQL
              value: {{ .Values.postgres.database }}
            - name: PGHOST # This env variable is used per default, by PSQL
              value: {{ .Values.postgres.host }}
            - name: PGPORT
              value: "{{ .Values.postgres.port }}"
            - name: PGUSER
              value: {{ .Values.postgres.username }}
            - name: PGPASSWORD
              value: {{ .Values.postgres.password }}
            - name: APPLICATIONUSER
              valueFrom:
                secretKeyRef: 
                  name: "{{ .Release.Name }}"
                  key: username
            - name: APPLICATIONDB
              valueFrom:
                secretKeyRef: 
                  name: "{{ .Release.Name }}"
                  key: database
          command: ["psql","-c", "GRANT ALL PRIVILEGES ON DATABASE $(APPLICATIONDB) TO $(APPLICATIONUSER)"]
      restartPolicy: Never
  backoffLimit: 10
